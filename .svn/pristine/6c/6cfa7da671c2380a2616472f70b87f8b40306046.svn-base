var innerAudio = wx.createInnerAudioContext();
const Trequest = require('../../static/js/request.js')
Page({
  data: {
    coverImgUrl: '',
    walkmanPlay: {
      walkmanState: 'none',
      title: '',
      current: '0.0',
      time: '0.0',
      audioPress: '0',
      playicon: 'playing',
      src:''
    },
    walkmanData:[]
  },
  onLoad: function (options) {
    // console.log('walkman');
    // goods_item  goods_id= 2  classified = 1
    var that = this;
    // 随身听
    Trequest({
      url: 'goods_item/getlist',
      data: {
        goods_id: 2,
        classified: 1,
      },
      callback(res) {
        // console.log(res.data);
        var data = res.data;
        that.setData({
          walkmanData: data
        })
      }
    });
    // 
    Trequest({
      url: 'goods/getlist',
      data: {
        id: 2,
        no_item: 1,
      },
      callback(res) {
        that.setData({
          coverImgUrl: res.data.data[0].pic_url
        })
      }
    });

    // 音乐播放器
    innerAudio.autoplay = false;
    this.createAudio();

  },
  // 隐藏页面
  onUnload:function (){
    // 关闭音频
    innerAudio.stop();
    // 暂停音频
    // innerAudio.pause();
  },
  // 随身听列表选择播放
  palyMusic: function (e) {
    // console.log('选择播放');
    innerAudio.destroy();
    innerAudio = wx.createInnerAudioContext();
    // 获取当前选择的音频信息
    var dataset = e.currentTarget.dataset;
    // console.log(dataset);
    this.setData({
      'coverImgUrl': dataset.coverimgurl,
      'walkmanPlay.title': dataset.title,
      'walkmanPlay.src': dataset.src,
      'walkmanPlay.time': '0:0',
      'walkmanPlay.current': '0:0',
      'walkmanPlay.playicon': 'playing',
      'walkmanPlay.walkmanState': 'block'
    })
    innerAudio.autoplay = true;
    this.createAudio();
    innerAudio.play();
  },
  // 随身听播放控制
  _iconPlay: function () {
    if (this.data.walkmanPlay.playicon == "play") {
      innerAudio.play();
      this.setData({
        'walkmanPlay.playicon': 'playing'
      })
    } else {
      innerAudio.pause();
      this.setData({
        'walkmanPlay.playicon': 'play'
      })
    }
  },
  // 关闭停止随身听
  _iconStop: function () {
    // console.log('关闭')
    innerAudio.stop();
    this.setData({
      'walkmanPlay.walkmanState': 'none'
    })
  },

  createAudio: function () {
    innerAudio.src = this.data.walkmanPlay.src;
    innerAudio.onCanplay(() => {
      // console.log('进入可以播放状态');
      this.setData({
        'walkmanPlay.time': this.convertTime(innerAudio.duration),
        'walkmanPlay.current': this.convertTime(innerAudio.currentTime),
        'walkmanPlay.audioPress': Math.ceil(innerAudio.currentTime / innerAudio.duration * 100)
      })
    })
    innerAudio.onPlay(() => {
      // console.log('开始播放');
      this.setData({
        'walkmanPlay.playicon': 'playing',
        'walkmanPlay.time': this.convertTime(innerAudio.duration),
        'walkmanPlay.current': this.convertTime(innerAudio.currentTime),
        'walkmanPlay.audioPress': Math.ceil(innerAudio.currentTime / innerAudio.duration * 100)
      })
    })
    innerAudio.onTimeUpdate(() => {
      // console.log('正在播放');
      this.setData({
        'walkmanPlay.time': this.convertTime(innerAudio.duration),
        'walkmanPlay.current': this.convertTime(innerAudio.currentTime),
        'walkmanPlay.audioPress': Math.ceil(innerAudio.currentTime / innerAudio.duration * 100)
      })
    })
    innerAudio.onPause(() => {
      // console.log('暂停播放');
      this.setData({
        'walkmanPlay.playicon': 'play'
      })
    })
    innerAudio.onStop(() => {
      // console.log('停止播放');
      this.setData({
        walkmanState: 'none'
      })
      //停止播放，销毁该实例
      innerAudio.destroy();
    })
    innerAudio.onEnded(() => {
      // console.log('录音播放结束');
      this.setData({
        'walkmanPlay.playicon': 'play'
      });
      //播放结束，销毁该实例
      innerAudio.destroy();
    })

    innerAudio.onError((res) => {
      // console.log(res.errMsg);
      // console.log(res.errCode);
      // wx.showToast({
      //   title: res.errMsg,
      //   icon: 'none'
      // });
      innerAudio.destroy();
    })
  },
  toSearch: function () {
    wx.navigateTo({
      url: '../search/search',
    })
  },
  convertTime: function (a) {
    var second = Math.floor(a % 60); //计算秒
    var minite = Math.floor((a / 60) % 60); //计算分
    var hour = Math.floor((a / 3600) % 24); //计算小时
    var day = Math.floor((a / 3600) / 24);
    var str = '';
    if (day) {
      day = day.toString() + ':';
    } else {
      day = '';
    }
    if (hour) {
      hour = hour.toString() + ':';
    } else if (day) {
      hour = '0:';
    } else {
      hour = '';
    }
    if (minite) {
      minite = minite.toString() + ':';
    } else {
      minite = '0:';
    }
    if (second) {
      second = second.toString();
    } else {
      second = '0';
    }
    str = day + hour + minite + second;
    return str;
  },
  // 获取滚动条当前位置
  onPageScroll: function (e) {
    console.log(e.scrollTop,'top');
    if (e.scrollTop > 100) {
      this.setData({
        floorstatus: true
      });
    } else {
      this.setData({
        floorstatus: false
      });
    }
  },
  //回到顶部
  goTop: function (e) { // 一键回到顶部
    if (wx.pageScrollTo) {
      wx.pageScrollTo({
        scrollTop: 0
      })
    } else {
      wx.showModal({
        title: '提示',
        content: '当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。'
      })
    }
  }
})
