var order = ['red', 'yellow', 'blue', 'green', 'red'];
const Trequest = require('../../static/js/request.js')
var innerAudio = wx.createInnerAudioContext();
Page({
  data: {
    imgHost:'http://huiben.fengsh.cn/',
    seachVal: '',
    currentTab: 0,
    swiperTab: [],
    navList: [],
    swiperTab1: ['精选', '少儿', '商业', '旅游', '时尚', '新闻', '娱乐', '魔术', '旅游', '时尚', '新闻'],
    imgUrls: ['/images/demo.png', '/images/demo.png', '/images/demo.png'],
    maskFlag: true,
    //默认
    current1: 0,
    walkmanList: [{
      poster: 'https://p1.music.126.net/gEia-o05FSas8uJos54Sug==/109951163456726954.jpg?param=130y130',
      name: '不染',
      author: '毛不易',
      time: '0:0',
      current: '0:0',
      src: 'https://m10.music.126.net/20180828095222/6b460018cd2fac557a69de50dbdb22c8/ymusic/4a8d/674b/d679/819279acfc4dd69fdb778d3d1ceae5cd.mp3'
    }, {
      poster: 'https://p1.music.126.net/SKujq5vqqv4KYOVFk7SiRA==/3407386538630284.jpg?param=130y130',
      name: '泼茶香',
      author: '刘珂矣',
      time: '0:0',
      current: '0:0',
      src: 'https://m10.music.126.net/20180828101026/55d8d5e6f47d654beddba60daf81c5f5/ymusic/aadf/4298/4691/f0b4ef5987fc0e221cc6831cecb4d791.mp3'
      }, {
        poster: 'http://y.gtimg.cn/music/photo_new/T002R300x300M000003rsKF44GyaSk.jpg?max_age=2592000',
        name: '此时此刻',
        author: '许巍',
        time: '0:0',
        current: '0:0',
        src: 'http://ws.stream.qqmusic.qq.com/M500001VfvsJ21xFqb.mp3?guid=ffffffff82def4af4b12b3cd9337d5e7&uin=346897220&vkey=6292F51E1E384E06DCBDC9AB7C49FD713D632D313AC4858BACB8DDD29067D3C601481D36E62053BF8DFEAF74C0A5CCFADD6471160CAF3E6A&fromtag=46'
    }, {
      poster: 'https://p1.music.126.net/SKujq5vqqv4KYOVFk7SiRA==/3407386538630284.jpg?param=130y130',
      name: '殿书',
      author: '奇然',
      time: '0:0',
      current: '0:0',
      src: 'https://m10.music.126.net/20180828103259/b20d69d0a292b9acd58aca643b324cdb/ymusic/f80f/ed85/a899/a80b5ca6259bb114adac0089e6f75591.mp3'
    }],
    // 音乐播放器
    playicon: 'play',
    audioPress: 0,
    walkmanState: 'block',
    walkmanPlay: {
      poster: 'https://p1.music.126.net/SKujq5vqqv4KYOVFk7SiRA==/3407386538630284.jpg?param=130y130',
      name: '殿书',
      author: '奇然',
      time: '0:0',
      current: '0:0',
      src: 'https://m10.music.126.net/20180828103259/b20d69d0a292b9acd58aca643b324cdb/ymusic/f80f/ed85/a899/a80b5ca6259bb114adac0089e6f75591.mp3'
    }
  },
  onLoad: function(options) {
    this.setData({
      title: options.title
    })
    // wx.showModal({
    //   title: "提示",
    //   content: "确认删除改收货地址？",
    //   success: function (e) {
    //     e.confirm && (wx.showLoading({
    //       title: "正在删除",
    //       mask: !0
    //     }), a.request({
    //       url: '',
    //       data: {},
    //       success: function (s) {
    //       }
    //     }));
    //   }
    // });


    var that = this;
    Trequest({
      url: 'goods_category/cates',
      data: {},
      callback(res) {
        // console.log(res);
        that.cates(res.data[0].id);
        var arr = [];
        var len = res.data.length;
        for (var i = 0; i < len; i++) {
          arr.push(res.data[i]);
        }
        that.setData({
          swiperTab: arr
        })
      }

    });
    // 头部分类
    Trequest({
      url: 'goods/getlist',
      data: {
        gc_id: 1
      },
      callback(res) {
        console.log(res);
      }
    });
    // 首页分类 轮播图 
    Trequest({
      url: 'adv/getlist',
      data: {
        type: '1,2,3,4',
        classified : 1
      },
      callback(res) {
        // console.log(res);
      }
    });
    // 广告分类
    Trequest({
      url: 'adv/getlist',
      data: {
        type: 2
      },
      callback(res) {
        // console.log(res);
      }
    });
    // 课程 随身听
    Trequest({
      url: 'goods_item/getlist',
      data: {
        goods_id: 2
      },
      callback(res) {
        // console.log(res);
        console.log(res.data.data);
        that.setData({
          'walkmanList':res.data.data
        })
      }
    });
    

    // 音乐播放器
    innerAudio.autoplay = false;
    this.createAudio();

  },
  // 随身听列表选择播放
  palyMusic:function(e){
    // console.log('选择播放');
    innerAudio.destroy();
    innerAudio = wx.createInnerAudioContext();
    // 获取当前选择的音频信息
    var dataset = e.currentTarget.dataset;
    this.setData({
      'walkmanPlay.poster': dataset.poster,
      'walkmanPlay.author': dataset.author,
      'walkmanPlay.name': dataset.name,
      'walkmanPlay.src': dataset.src,
      'walkmanPlay.time': '0:0',
      'walkmanPlay.current': '0:0'
    })
    innerAudio.autoplay = true;
    this.createAudio();
    this.setData({
      playicon: 'playing',
      walkmanState: 'block'
    })
    innerAudio.play();
  },
  // 随身听播放控制
  iconPlay: function() {
    if (this.data.playicon == "play") {
      innerAudio.play();
    } else {
      innerAudio.pause();
    }
  },
  // 关闭停止随身听
  iconStop: function() {
    innerAudio.stop();
  },
  toSearch: function() {
    wx.navigateTo({
      url: '../search/search',
    })
  },
  showFlag: function() {
    this.setData({
      maskFlag: true
    })
  },
  //点击切换
  clickTab: function(e) {
    var that = this;
    if (this.data.currentTab === e.target.dataset.current) {
      return false;
    } else {
      that.setData({
        currentTab: e.target.dataset.current
      })
      that.cates(e.currentTarget.dataset.currentId);
    }

  },
  changeIndicatorDots: function(e) {
    this.setData({
      indicatorDots: !this.data.indicatorDots
    })
  },
  intervalChange: function(e) {
    this.setData({
      interval: e.detail.value
    })
  },
  durationChange: function(e) {
    this.setData({
      duration: e.detail.value
    })
  },
  // tab左右切换事件
  bindchange: function(e) {
    this.setData({
      current1: e.detail.current
    })
  },
  cates: function(id) {
    var that = this;
    Trequest({
      url: 'goods_category/cates',
      data: {
        id: id
      },
      callback(res) {
        var arr = [];
        for (var i = 0; i < res.data.length; i++) {
          arr.push(res.data[i]);
        }
        that.setData({
          navList: arr
        })
      }
    });
  },
  createAudio:function(){
    innerAudio.src = this.data.walkmanPlay.src;
    innerAudio.onCanplay(() => {
      // console.log('进入可以播放状态');
      this.setData({
        'walkmanPlay.time': this.convertTime(innerAudio.duration),
        'walkmanPlay.current': this.convertTime(innerAudio.currentTime)
      })
    })
    innerAudio.onPlay(() => {
      // console.log('开始播放');
      this.setData({
        playicon: 'playing',
        'walkmanPlay.time': this.convertTime(innerAudio.duration),
        'walkmanPlay.current': this.convertTime(innerAudio.currentTime)
      })
    })
    innerAudio.onTimeUpdate(() => {
      // console.log('正在播放');
      this.setData({
        'walkmanPlay.time': this.convertTime(innerAudio.duration),
        'walkmanPlay.current': this.convertTime(innerAudio.currentTime),
        audioPress: Math.ceil(innerAudio.currentTime / innerAudio.duration * 100)
      })
    })
    innerAudio.onPause(() => {
      // console.log('暂停播放');
      this.setData({
        playicon: 'play'
      })
    })
    innerAudio.onStop(() => {
      // console.log('停止播放');
      this.setData({
        playicon: 'play',
        walkmanState: 'none'
      })
      //停止播放，销毁该实例
      innerAudio.destroy();
    })
    innerAudio.onEnded(() => {
      console.log('录音播放结束');
      this.setData({
        playicon: 'play'
      });
      //播放结束，销毁该实例
      innerAudio.destroy();
    })

    innerAudio.onError((res) => {
      console.log(res.errMsg);
      console.log(res.errCode);
      innerAudio.destroy();
    })
  },
  convertTime: function(a) {
    var second = Math.floor(a % 60); //计算秒
    var minite = Math.floor((a / 60) % 60); //计算分
    var hour = Math.floor((a / 3600) % 24); //计算小时
    var day = Math.floor((a / 3600) / 24);
    var str = '';
    if (day) {
      day = day.toString() + ':';
    } else {
      day = '';
    }
    if (hour) {
      hour = hour.toString() + ':';
    } else if (day) {
      hour = '0:';
    } else {
      hour = '';
    }
    if (minite) {
      minite = minite.toString() + ':';
    } else {
      minite = '0:';
    }
    if (second) {
      second = second.toString();
    } else {
      second = '0';
    }
    str = day + hour + minite + second;
    return str;
  }
})